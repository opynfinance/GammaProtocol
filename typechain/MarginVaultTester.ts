/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export declare namespace MarginVault {
  export type VaultStruct = {
    shortOtokens: string[];
    longOtokens: string[];
    collateralAssets: string[];
    shortAmounts: BigNumberish[];
    longAmounts: BigNumberish[];
    collateralAmounts: BigNumberish[];
  };

  export type VaultStructOutput = [
    string[],
    string[],
    string[],
    BigNumber[],
    BigNumber[],
    BigNumber[]
  ] & {
    shortOtokens: string[];
    longOtokens: string[];
    collateralAssets: string[];
    shortAmounts: BigNumber[];
    longAmounts: BigNumber[];
    collateralAmounts: BigNumber[];
  };
}

export interface MarginVaultTesterInterface extends utils.Interface {
  contractName: "MarginVaultTester";
  functions: {
    "getVault(uint256)": FunctionFragment;
    "testAddCollateral(uint256,address,uint256,uint256)": FunctionFragment;
    "testAddLong(uint256,address,uint256,uint256)": FunctionFragment;
    "testAddShort(uint256,address,uint256,uint256)": FunctionFragment;
    "testRemoveCollateral(uint256,address,uint256,uint256)": FunctionFragment;
    "testRemoveLong(uint256,address,uint256,uint256)": FunctionFragment;
    "testRemoveShort(uint256,address,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getVault",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testAddCollateral",
    values: [BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testAddLong",
    values: [BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testAddShort",
    values: [BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testRemoveCollateral",
    values: [BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testRemoveLong",
    values: [BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testRemoveShort",
    values: [BigNumberish, string, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "getVault", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "testAddCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testAddLong",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testAddShort",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testRemoveCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testRemoveLong",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testRemoveShort",
    data: BytesLike
  ): Result;

  events: {};
}

export interface MarginVaultTester extends BaseContract {
  contractName: "MarginVaultTester";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MarginVaultTesterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getVault(
      _vaultIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[MarginVault.VaultStructOutput]>;

    testAddCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testAddLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testAddShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testRemoveCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testRemoveLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testRemoveShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getVault(
    _vaultIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<MarginVault.VaultStructOutput>;

  testAddCollateral(
    _vaultIndex: BigNumberish,
    _collateralAsset: string,
    _amount: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testAddLong(
    _vaultIndex: BigNumberish,
    _longOtoken: string,
    _amount: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testAddShort(
    _vaultIndex: BigNumberish,
    _shortOtoken: string,
    _amount: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testRemoveCollateral(
    _vaultIndex: BigNumberish,
    _collateralAsset: string,
    _amount: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testRemoveLong(
    _vaultIndex: BigNumberish,
    _longOtoken: string,
    _amount: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testRemoveShort(
    _vaultIndex: BigNumberish,
    _shortOtoken: string,
    _amount: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getVault(
      _vaultIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<MarginVault.VaultStructOutput>;

    testAddCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testAddLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testAddShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testRemoveCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testRemoveLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testRemoveShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getVault(
      _vaultIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testAddCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testAddLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testAddShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testRemoveCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testRemoveLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testRemoveShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getVault(
      _vaultIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testAddCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testAddLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testAddShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testRemoveCollateral(
      _vaultIndex: BigNumberish,
      _collateralAsset: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testRemoveLong(
      _vaultIndex: BigNumberish,
      _longOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testRemoveShort(
      _vaultIndex: BigNumberish,
      _shortOtoken: string,
      _amount: BigNumberish,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
