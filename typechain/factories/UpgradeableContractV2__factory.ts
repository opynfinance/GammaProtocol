/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradeableContractV2,
  UpgradeableContractV2Interface,
} from "../UpgradeableContractV2";

const _abi = [
  {
    inputs: [],
    name: "addressBook",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getV1Version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getV2Version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressBook",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610240806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063485cc9551461005c5780638da5cb5b1461008c5780638f26c061146100b05780639b2c78b5146100ca578063f5887cdd146100d2575b600080fd5b61008a6004803603604081101561007257600080fd5b506001600160a01b03813581169160200135166100da565b005b6100946101ae565b604080516001600160a01b039092168252519081900360200190f35b6100b86101bd565b60408051918252519081900360200190f35b6100b86101c2565b6100946101c7565b600054610100900460ff16806100f357506100f36101d6565b80610101575060005460ff16155b61013c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806101dd602e913960400191505060405180910390fd5b600054610100900460ff16158015610167576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b038086166001600160a01b031992831617909255603480549285169290911691909117905580156101a9576000805461ff00191690555b505050565b6034546001600160a01b031681565b600190565b600290565b6033546001600160a01b031681565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220f6d4c8238e8a3709a6c043c6b4d7f9c42afee2432fb971cb0ae752f7d16104f264736f6c634300060a0033";

type UpgradeableContractV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeableContractV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeableContractV2__factory extends ContractFactory {
  constructor(...args: UpgradeableContractV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UpgradeableContractV2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradeableContractV2> {
    return super.deploy(overrides || {}) as Promise<UpgradeableContractV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradeableContractV2 {
    return super.attach(address) as UpgradeableContractV2;
  }
  connect(signer: Signer): UpgradeableContractV2__factory {
    return super.connect(signer) as UpgradeableContractV2__factory;
  }
  static readonly contractName: "UpgradeableContractV2";
  public readonly contractName: "UpgradeableContractV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeableContractV2Interface {
    return new utils.Interface(_abi) as UpgradeableContractV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeableContractV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradeableContractV2;
  }
}
