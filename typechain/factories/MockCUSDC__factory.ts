/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockCUSDC, MockCUSDCInterface } from "../MockCUSDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initExchangeRateStored",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_exchangeRateStored",
        type: "uint256",
      },
    ],
    name: "setExchangeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a76400006099553480156200001d57600080fd5b506040516200145338038062001453833981810160405260808110156200004357600080fd5b81019080805160405193929190846401000000008211156200006457600080fd5b9083019060208201858111156200007a57600080fd5b82516401000000008111828201881017156200009557600080fd5b82525081516020918201929091019080838360005b83811015620000c4578181015183820152602001620000aa565b50505050905090810190601f168015620000f25780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011657600080fd5b9083019060208201858111156200012c57600080fd5b82516401000000008111828201881017156200014757600080fd5b82525081516020918201929091019080838360005b83811015620001765781810151838201526020016200015c565b50505050905090810190601f168015620001a45780820380516001836020036101000a031916815260200191505b50604090815260208201519101519092509050620001cc84846001600160e01b036200020e16565b620001e160086001600160e01b03620002fc16565b609880546001600160a01b0319166001600160a01b03939093169290921790915560975550620003bb9050565b600054610100900460ff1680620002335750620002336001600160e01b036200031216565b8062000242575060005460ff16155b6200027f5760405162461bcd60e51b815260040180806020018281038252602e81526020018062001425602e913960400191505060405180910390fd5b600054610100900460ff16158015620002ab576000805460ff1961ff0019909116610100171660011790555b8251620002c090606890602086019062000319565b508151620002d690606990602085019062000319565b50606a805460ff191660121790558015620002f7576000805461ff00191690555b505050565b606a805460ff191660ff92909216919091179055565b303b155b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200035c57805160ff19168380011785556200038c565b828001600101855582156200038c579182015b828111156200038c5782518255916020019190600101906200036f565b506200039a9291506200039e565b5090565b6200031691905b808211156200039a5760008155600101620003a5565b61105a80620003cb6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a9059cbb11610071578063a9059cbb1461030a578063db006a7514610336578063db068e0e14610353578063dd62ed3e14610372578063f51e181a146103a05761010b565b806370a082311461029357806395d89b41146102b9578063a0712d68146102c1578063a457c2d7146102de5761010b565b806323b872dd116100de57806323b872dd146101ef578063313ce5671461022557806339509351146102435780636f307dc31461026f5761010b565b806306fdde0314610110578063095ea7b31461018d57806318160ddd146101cd578063182df0f5146101e7575b600080fd5b6101186103a8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015257818101518382015260200161013a565b50505050905090810190601f16801561017f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b9600480360360408110156101a357600080fd5b506001600160a01b03813516906020013561043e565b604080519115158252519081900360200190f35b6101d561045c565b60408051918252519081900360200190f35b6101d5610462565b6101b96004803603606081101561020557600080fd5b506001600160a01b03813581169160208101359091169060400135610468565b61022d6104f5565b6040805160ff9092168252519081900360200190f35b6101b96004803603604081101561025957600080fd5b506001600160a01b0381351690602001356104fe565b610277610552565b604080516001600160a01b039092168252519081900360200190f35b6101d5600480360360208110156102a957600080fd5b50356001600160a01b0316610561565b61011861057c565b6101d5600480360360208110156102d757600080fd5b50356105dd565b6101b9600480360360408110156102f457600080fd5b506001600160a01b0381351690602001356106aa565b6101b96004803603604081101561032057600080fd5b506001600160a01b038135169060200135610718565b6101d56004803603602081101561034c57600080fd5b503561072c565b6103706004803603602081101561036957600080fd5b50356107eb565b005b6101d56004803603604081101561038857600080fd5b506001600160a01b03813581169160200135166107f0565b6101d561081b565b60688054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104345780601f1061040957610100808354040283529160200191610434565b820191906000526020600020905b81548152906001019060200180831161041757829003601f168201915b5050505050905090565b600061045261044b610821565b8484610825565b5060015b92915050565b60675490565b60975481565b6000610475848484610911565b6104eb84610481610821565b6104e685604051806060016040528060288152602001610f6e602891396001600160a01b038a166000908152606660205260408120906104bf610821565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a7a16565b610825565b5060019392505050565b606a5460ff1690565b600061045261050b610821565b846104e6856066600061051c610821565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b1116565b6098546001600160a01b031681565b6001600160a01b031660009081526065602052604090205490565b60698054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104345780601f1061040957610100808354040283529160200191610434565b6000806105f583609954610b7290919063ffffffff16565b9050600061060e60975483610bcb90919063ffffffff16565b905061061a3382610c0d565b609854604080516323b872dd60e01b81523360048201523060248201526044810187905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561067457600080fd5b505af1158015610688573d6000803e3d6000fd5b505050506040513d602081101561069e57600080fd5b50600095945050505050565b60006104526106b7610821565b846104e68560405180606001604052806025815260200161100060259139606660006106e1610821565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7a16565b6000610452610725610821565b8484610911565b60006107383383610d0b565b600061076160995461075560975486610b7290919063ffffffff16565b9063ffffffff610bcb16565b6098546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b505050506040513d60208110156107e257600080fd5b50919392505050565b609755565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b60995481565b3390565b6001600160a01b03831661086a5760405162461bcd60e51b8152600401808060200182810382526024815260200180610fdc6024913960400191505060405180910390fd5b6001600160a01b0382166108af5760405162461bcd60e51b8152600401808060200182810382526022815260200180610f056022913960400191505060405180910390fd5b6001600160a01b03808416600081815260666020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109565760405162461bcd60e51b8152600401808060200182810382526025815260200180610fb76025913960400191505060405180910390fd5b6001600160a01b03821661099b5760405162461bcd60e51b8152600401808060200182810382526023815260200180610ec06023913960400191505060405180910390fd5b6109a6838383610e13565b6109e981604051806060016040528060268152602001610f27602691396001600160a01b038616600090815260656020526040902054919063ffffffff610a7a16565b6001600160a01b038085166000908152606560205260408082209390935590841681522054610a1e908263ffffffff610b1116565b6001600160a01b0380841660008181526065602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b095760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ace578181015183820152602001610ab6565b50505050905090810190601f168015610afb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b6b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082610b8157506000610456565b82820282848281610b8e57fe5b0414610b6b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610f4d6021913960400191505060405180910390fd5b6000610b6b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e18565b6001600160a01b038216610c68576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610c7460008383610e13565b606754610c87908263ffffffff610b1116565b6067556001600160a01b038216600090815260656020526040902054610cb3908263ffffffff610b1116565b6001600160a01b03831660008181526065602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610d505760405162461bcd60e51b8152600401808060200182810382526021815260200180610f966021913960400191505060405180910390fd5b610d5c82600083610e13565b610d9f81604051806060016040528060228152602001610ee3602291396001600160a01b038516600090815260656020526040902054919063ffffffff610a7a16565b6001600160a01b038316600090815260656020526040902055606754610dcb908263ffffffff610e7d16565b6067556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b60008183610e675760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610ace578181015183820152602001610ab6565b506000838581610e7357fe5b0495945050505050565b6000610b6b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a7a56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206b42fd4b0c19d342114edd42c13ba1d047a7f38146af1ee8437faac71d46d28f64736f6c634300060a0033436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564";

type MockCUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCUSDC__factory extends ContractFactory {
  constructor(...args: MockCUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockCUSDC";
  }

  deploy(
    _name: string,
    _symbol: string,
    _underlying: string,
    _initExchangeRateStored: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockCUSDC> {
    return super.deploy(
      _name,
      _symbol,
      _underlying,
      _initExchangeRateStored,
      overrides || {}
    ) as Promise<MockCUSDC>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _underlying: string,
    _initExchangeRateStored: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _underlying,
      _initExchangeRateStored,
      overrides || {}
    );
  }
  attach(address: string): MockCUSDC {
    return super.attach(address) as MockCUSDC;
  }
  connect(signer: Signer): MockCUSDC__factory {
    return super.connect(signer) as MockCUSDC__factory;
  }
  static readonly contractName: "MockCUSDC";
  public readonly contractName: "MockCUSDC";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCUSDCInterface {
    return new utils.Interface(_abi) as MockCUSDCInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCUSDC {
    return new Contract(address, _abi, signerOrProvider) as MockCUSDC;
  }
}
