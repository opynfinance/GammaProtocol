/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PayableProxyController,
  PayableProxyControllerInterface,
} from "../PayableProxyController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginPool",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract Controller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Actions.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "secondAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Actions.ActionArgs[]",
        name: "_actions",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "_sendEthTo",
        type: "address",
      },
    ],
    name: "operate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract WETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200154638038062001546833981016040819052620000349162000343565b60016000819055600280546001600160a01b03199081166001600160a01b03878116919091179092558254168382161791829055620000849116836000196200008d602090811b6200045017901c565b50505062000588565b8015806200011c5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90620000c69030908690600401620003f6565b60206040518083038186803b158015620000df57600080fd5b505afa158015620000f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011a9190620003bf565b155b620001445760405162461bcd60e51b81526004016200013b90620004df565b60405180910390fd5b6200019f8363095ea7b360e01b84846040516024016200016692919062000410565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0393841617905290620001a416565b505050565b606062000200826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200024060201b6200054f179092919060201c565b8051909150156200019f578080602001905181019062000221919062000396565b6200019f5760405162461bcd60e51b81526004016200013b9062000495565b60606200025a84846000856001600160e01b036200026216565b949350505050565b606062000278856001600160e01b036200033d16565b620002975760405162461bcd60e51b81526004016200013b906200045e565b60006060866001600160a01b03168587604051620002b69190620003d8565b60006040518083038185875af1925050503d8060008114620002f5576040519150601f19603f3d011682016040523d82523d6000602084013e620002fa565b606091505b50915091508115620003105791506200025a9050565b805115620003215780518082602001fd5b8360405162461bcd60e51b81526004016200013b919062000429565b3b151590565b60008060006060848603121562000358578283fd5b835162000365816200056f565b602085015190935062000378816200056f565b60408501519092506200038b816200056f565b809150509250925092565b600060208284031215620003a8578081fd5b81518015158114620003b8578182fd5b9392505050565b600060208284031215620003d1578081fd5b5051919050565b60008251620003ec8184602087016200053c565b9190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526200044a8160408501602087016200053c565b601f01601f19169190910160400192915050565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b60005b83811015620005595781810151838201526020016200053f565b8381111562000569576000848401525b50505050565b6001600160a01b03811681146200058557600080fd5b50565b610fae80620005986000396000f3fe6080604052600436106100345760003560e01c80633fc8cef314610069578063dbde292714610094578063f77c4791146100a7575b6001546001600160a01b031633146100675760405162461bcd60e51b815260040161005e90610dc4565b60405180910390fd5b005b34801561007557600080fd5b5061007e6100bc565b60405161008b9190610b18565b60405180910390f35b6100676100a2366004610930565b6100cb565b3480156100b357600080fd5b5061007e610441565b6001546001600160a01b031681565b600260005414156100ee5760405162461bcd60e51b815260040161005e90610e8f565b6002600055341561016357600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561014957600080fd5b505af115801561015d573d6000803e3d6000fd5b50505050505b60005b82518110156102ad57610177610840565b83828151811061018357fe5b6020026020010151905060006001600160a01b031681602001516001600160a01b03161461026b5780602001516001600160a01b0316336001600160a01b0316148061024f57506002546020820151604051635b1b1e7960e11b81526001600160a01b039092169163b6363cf2916101ff913390600401610b2c565b60206040518083038186803b15801561021757600080fd5b505afa15801561022b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024f9190610a7a565b61026b5760405162461bcd60e51b815260040161005e90610d76565b60098151600a81111561027a57fe5b14156102a45760408101516001546102a4916001600160a01b03909116903463ffffffff61056616565b50600101610166565b50600254604051635b0bf86360e11b81526001600160a01b039091169063b617f0c6906102de908590600401610b5f565b600060405180830381600087803b1580156102f857600080fd5b505af115801561030c573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152600093506001600160a01b0390911691506370a0823190610343903090600401610b18565b60206040518083038186803b15801561035b57600080fd5b505afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610a9a565b90508015610437576001600160a01b0382166103c15760405162461bcd60e51b815260040161005e90610d19565b600154604051632e1a7d4d60e01b81526001600160a01b0390911690632e1a7d4d906103f1908490600401610f1c565b600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50610437925050506001600160a01b0383168261061d565b5050600160005550565b6002546001600160a01b031681565b8015806104d85750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906104869030908690600401610b2c565b60206040518083038186803b15801561049e57600080fd5b505afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190610a9a565b155b6104f45760405162461bcd60e51b815260040161005e90610ec6565b61054a8363095ea7b360e01b8484604051602401610513929190610b46565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106b9565b505050565b606061055e8484600085610748565b949350505050565b60006105f682856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040161059a929190610b2c565b60206040518083038186803b1580156105b257600080fd5b505afa1580156105c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ea9190610a9a565b9063ffffffff61080c16565b90506106178463095ea7b360e01b8584604051602401610513929190610b46565b50505050565b8047101561063d5760405162461bcd60e51b815260040161005e90610ce2565b6000826001600160a01b03168260405161065690610b15565b60006040518083038185875af1925050503d8060008114610693576040519150601f19603f3d011682016040523d82523d6000602084013e610698565b606091505b505090508061054a5760405162461bcd60e51b815260040161005e90610c85565b606061070e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661054f9092919063ffffffff16565b80519091501561054a578080602001905181019061072c9190610a7a565b61054a5760405162461bcd60e51b815260040161005e90610e45565b60606107538561083a565b61076f5760405162461bcd60e51b815260040161005e90610e0e565b60006060866001600160a01b0316858760405161078c9190610af9565b60006040518083038185875af1925050503d80600081146107c9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ce565b606091505b509150915081156107e257915061055e9050565b8051156107f25780518082602001fd5b8360405162461bcd60e51b815260040161005e9190610c34565b6000828201838110156108315760405162461bcd60e51b815260040161005e90610c4e565b90505b92915050565b3b151590565b604080516101008101909152806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b80356001600160a01b038116811461083457600080fd5b600082601f8301126108c8578081fd5b813567ffffffffffffffff8111156108de578182fd5b6108f1601f8201601f1916602001610f25565b915080825283602082850101111561090857600080fd5b8060208401602084013760009082016020015292915050565b8035600b811061083457600080fd5b60008060408385031215610942578182fd5b823567ffffffffffffffff80821115610959578384fd5b81850186601f82011261096a578485fd5b803592508183111561097a578485fd5b60206109898182860201610f25565b84815281810190838301885b87811015610a5a5781358601610100818e03601f190112156109b5578a8bfd5b6109c0610100610f25565b6109cc8e888401610921565b81526109db8e604084016108a1565b878201526109ec8e606084016108a1565b60408201526109fe8e608084016108a1565b606082015260a0820135608082015260c082013560a082015260e082013560c082015261010082013589811115610a33578c8dfd5b610a418f89838601016108b8565b60e0830152508552509284019290840190600101610995565b50508097505050610a6d888289016108a1565b9450505050509250929050565b600060208284031215610a8b578081fd5b81518015158114610831578182fd5b600060208284031215610aab578081fd5b5051919050565b6001600160a01b03169052565b60008151808452610ad7816020860160208601610f4c565b601f01601f19169290920160200192915050565b600b8110610af557fe5b9052565b60008251610b0b818460208701610f4c565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015610c2657603f198984030185528151610100610ba4858351610aeb565b88820151610bb48a870182610ab2565b5087820151610bc589870182610ab2565b50606080830151610bd882880182610ab2565b50506080828101519086015260a0808301519086015260c0808301519086015260e080830151818701839052610c1083880182610abf565b988b019896505050928801925050600101610b83565b509098975050505050505050565b600060208252610c476020830184610abf565b9392505050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b60208082526037908201527f50617961626c6550726f7879436f6e74726f6c6c65723a2063616e6e6f74207360408201527f656e642045544820746f2061646472657373207a65726f000000000000000000606082015260800190565b6020808252602e908201527f50617961626c6550726f7879436f6e74726f6c6c65723a2063616e6e6f74206560408201526d03c32b1baba329030b1ba34b7b7160951b606082015260800190565b6020808252602a908201527f50617961626c6550726f7879436f6e74726f6c6c65723a2043616e6e6f7420726040820152690cac6cad2ecca408aa8960b31b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610f4457600080fd5b604052919050565b60005b83811015610f67578181015183820152602001610f4f565b83811115610617575050600091015256fea2646970667358221220513976e8702620ac97bce140acc1cb4d302110b80c455f863128b44d9c0eb86764736f6c634300060a0033";

type PayableProxyControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayableProxyControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayableProxyController__factory extends ContractFactory {
  constructor(...args: PayableProxyControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PayableProxyController";
  }

  deploy(
    _controller: string,
    _marginPool: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PayableProxyController> {
    return super.deploy(
      _controller,
      _marginPool,
      _weth,
      overrides || {}
    ) as Promise<PayableProxyController>;
  }
  getDeployTransaction(
    _controller: string,
    _marginPool: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _marginPool,
      _weth,
      overrides || {}
    );
  }
  attach(address: string): PayableProxyController {
    return super.attach(address) as PayableProxyController;
  }
  connect(signer: Signer): PayableProxyController__factory {
    return super.connect(signer) as PayableProxyController__factory;
  }
  static readonly contractName: "PayableProxyController";
  public readonly contractName: "PayableProxyController";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayableProxyControllerInterface {
    return new utils.Interface(_abi) as PayableProxyControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PayableProxyController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PayableProxyController;
  }
}
