/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FlashUnwrap, FlashUnwrapInterface } from "../FlashUnwrap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnwrappedETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrappedETH",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "callFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104d83803806104d883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610447806100916000396000f3fe60806040526004361061002d5760003560e01c80639c23da5014610039578063ad5c46481461005b57610034565b3661003457005b600080fd5b34801561004557600080fd5b50610059610054366004610251565b610086565b005b34801561006757600080fd5b5061007061022f565b60405161007d9190610383565b60405180910390f35b60208151146100b05760405162461bcd60e51b81526004016100a790610397565b60405180910390fd5b6100b861023e565b818060200190518101906100cc9190610321565b60005481516040516323b872dd60e01b81529293506001600160a01b03909116916323b872dd916101039187913091600401610346565b602060405180830381600087803b15801561011d57600080fd5b505af1158015610131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015591906102fa565b506000548151604051632e1a7d4d60e01b81526001600160a01b0390921691632e1a7d4d91610186916004016103e1565b600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b505082516040516001600160a01b038716935081156108fc0292506000818181858888f193505050501580156101ee573d6000803e3d6000fd5b5080516040517f6faea7d16ca41ff2745533919e5496e9f1d5f318b5dfa1dbd623a7a9b665c448916102229186919061036a565b60405180910390a1505050565b6000546001600160a01b031681565b6040518060200160405280600081525090565b60008060408385031215610263578182fd5b82356001600160a01b0381168114610279578283fd5b915060208381013567ffffffffffffffff80821115610296578384fd5b81860187601f8201126102a7578485fd5b80359250818311156102b7578485fd5b6102c9601f8401601f191685016103ea565b915082825287848483010111156102de578485fd5b8284820185840137509081019091019190915290939092509050565b60006020828403121561030b578081fd5b8151801515811461031a578182fd5b9392505050565b600060208284031215610332578081fd5b61033c60206103ea565b9151825250919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0391909116815260200190565b6020808252602a908201527f466c617368556e777261703a2063616e6e6f742070617273652043616c6c46756040820152696e6374696f6e4461746160b01b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561040957600080fd5b60405291905056fea26469706673582212206be6e3f5f45da638808216c23693fb1d7854894fd5f2e69641fb9eac9b83f1ba64736f6c634300060a0033";

type FlashUnwrapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashUnwrapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashUnwrap__factory extends ContractFactory {
  constructor(...args: FlashUnwrapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FlashUnwrap";
  }

  deploy(
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlashUnwrap> {
    return super.deploy(weth, overrides || {}) as Promise<FlashUnwrap>;
  }
  getDeployTransaction(
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  attach(address: string): FlashUnwrap {
    return super.attach(address) as FlashUnwrap;
  }
  connect(signer: Signer): FlashUnwrap__factory {
    return super.connect(signer) as FlashUnwrap__factory;
  }
  static readonly contractName: "FlashUnwrap";
  public readonly contractName: "FlashUnwrap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashUnwrapInterface {
    return new utils.Interface(_abi) as FlashUnwrapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashUnwrap {
    return new Contract(address, _abi, signerOrProvider) as FlashUnwrap;
  }
}
